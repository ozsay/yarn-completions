[
    {
        "command": "access",
        "flags": [],
        "subCommands": [
            "public",
            "restricted",
            "grant",
            "revoke",
            "ls-packages",
            "ls-collaborators",
            "edit"
        ]
    },
    {
        "command": "add",
        "flags": [
            "-D:save package to your `devDependencies`",
            " --dev:save package to your `devDependencies`",
            "-P:save package to your `peerDependencies`",
            " --peer:save package to your `peerDependencies`",
            "-O:save package to your `optionalDependencies`",
            " --optional:save package to your `optionalDependencies`",
            "-E:install exact version",
            " --exact:install exact version",
            "-T:install most recent release with the same minor version",
            " --tilde:install most recent release with the same minor version"
        ],
        "subCommands": []
    },
    {
        "command": "bin",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "cache",
        "flags": [],
        "subCommands": [
            "ls",
            "dir",
            "clean"
        ]
    },
    {
        "command": "check",
        "flags": [
            "--integrity",
            "--verify-tree"
        ],
        "subCommands": []
    },
    {
        "command": "clean",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "config",
        "flags": [],
        "subCommands": [
            "set",
            "get",
            "delete",
            "list"
        ]
    },
    {
        "command": "create",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "dedupe",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "exec",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "generate-lock-entry",
        "flags": [
            "--use-manifest <location>:description",
            "--resolved <resolved>:description",
            "--registry <registry>:description"
        ],
        "subCommands": []
    },
    {
        "command": "global",
        "flags": [
            "--prefix <prefix>:bin prefix to use to install binaries"
        ],
        "subCommands": [
            "add",
            "bin",
            "ls",
            "list",
            "remove",
            "upgrade",
            "upgrade-interactive"
        ]
    },
    {
        "command": "help",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "import",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "info",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "init",
        "flags": [
            "-y:use default options",
            " --yes:use default options"
        ],
        "subCommands": []
    },
    {
        "command": "install",
        "flags": [
            "-g:DEPRECATED",
            " --global:DEPRECATED",
            "-S:DEPRECATED - save package to your `dependencies`",
            " --save:DEPRECATED - save package to your `dependencies`",
            "-D:DEPRECATED - save package to your `devDependencies`",
            " --save-dev:DEPRECATED - save package to your `devDependencies`",
            "-P:DEPRECATED - save package to your `peerDependencies`",
            " --save-peer:DEPRECATED - save package to your `peerDependencies`",
            "-O:DEPRECATED - save package to your `optionalDependencies`",
            " --save-optional:DEPRECATED - save package to your `optionalDependencies`",
            "-E:DEPRECATED",
            " --save-exact:DEPRECATED",
            "-T:DEPRECATED",
            " --save-tilde:DEPRECATED"
        ],
        "subCommands": []
    },
    {
        "command": "licenses",
        "flags": [],
        "subCommands": [
            "ls",
            "generate-disclaimer"
        ]
    },
    {
        "command": "link",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "lockfile",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "login",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "logout",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "list",
        "flags": [
            "--depth:Limit the depth of the shown dependencies"
        ],
        "subCommands": []
    },
    {
        "command": "outdated",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "owner",
        "flags": [],
        "subCommands": [
            "add",
            "rm",
            "ls"
        ]
    },
    {
        "command": "pack",
        "flags": [
            "-f:filename",
            " --filename <filename>:filename"
        ],
        "subCommands": []
    },
    {
        "command": "prune",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "publish",
        "flags": [
            "--new-version:new version",
            "--message:message",
            "--no-git-tag-version:no git tag version",
            "--access:access",
            "--tag:tag"
        ],
        "subCommands": [
            "<tarball>",
            "<folder>"
        ]
    },
    {
        "command": "remove",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "run",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "tag",
        "flags": [],
        "subCommands": [
            "add",
            "rm",
            "ls"
        ]
    },
    {
        "command": "team",
        "flags": [],
        "subCommands": [
            "create",
            "destroy",
            "add",
            "rm",
            "ls"
        ]
    },
    {
        "command": "unlink",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "upgrade",
        "flags": [
            "-S:upgrade packages under the specified scope",
            " --scope <scope>:upgrade packages under the specified scope",
            "--latest:upgrade packages to the latest version, ignoring version ranges in package.json"
        ],
        "subCommands": []
    },
    {
        "command": "version",
        "flags": [
            "--new-version:new version",
            "--message:message",
            "--no-git-tag-version:no git tag version"
        ],
        "subCommands": []
    },
    {
        "command": "versions",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "why",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "workspace",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "upgrade-interactive",
        "flags": [
            "-E:upgrade to most recent release with exact version",
            " --exact:upgrade to most recent release with exact version",
            "-T:upgrade to most recent release with patch version",
            " --tilde:upgrade to most recent release with patch version"
        ],
        "subCommands": []
    },
    {
        "command": "upgrade-interactive",
        "flags": [
            "-E:upgrade to most recent release with exact version",
            " --exact:upgrade to most recent release with exact version",
            "-T:upgrade to most recent release with patch version",
            " --tilde:upgrade to most recent release with patch version"
        ],
        "subCommands": []
    },
    {
        "command": "generate-lock-entry",
        "flags": [
            "--use-manifest <location>:description",
            "--resolved <resolved>:description",
            "--registry <registry>:description"
        ],
        "subCommands": []
    },
    {
        "command": "c",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "i",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "la",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "ll",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "ln",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "ls",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "r",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "rb",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "rm",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "t",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "tst",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "un",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "up",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "v",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "add-user",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "adduser",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "author",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "dist-tag",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "dist-tags",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "isntall",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "run-script",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "run-script",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "show",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "uninstall",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "update",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "verison",
        "flags": [],
        "subCommands": []
    },
    {
        "command": "view",
        "flags": [],
        "subCommands": []
    }
]